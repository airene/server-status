name: Release

on:
  push:
    branches:
      - "main"

  workflow_dispatch:

env:
  CARGO_TERM_COLOR: always

jobs:
  release:
    name: Cross build for ${{ matrix.target }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-musl
            suffix: ""
          #          - os: ubuntu-latest
          #            target: aarch64-unknown-linux-musl
          #            suffix: ""
          #          - os: macos-latest
          #            target: x86_64-apple-darwin
          #            suffix: ""
          # - os: macos-latest
          #   target: aarch64-apple-darwin
          #   suffix: ""
          # - os: windows-latest
          #   target: x86_64-pc-windows-msvc
          #   suffix: .exe
    steps:
      - uses: actions/checkout@v3
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
      #- uses: actions/cache@v2
      #  name: "Cache Setup"
      #  with:
      #    path: |
      #      ~/.cargo/
      #      ~/.cargo/git
      #      target
      #    key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}registry
      - name: Install cross
        run: PROTOC=/usr/bin/protoc cargo install cross
      - name: Cache
        uses: Swatinem/rust-cache@v2.0.0
      - name: Install protoc
        if: matrix.os == 'ubuntu-latest'
        run: sudo apt install -y protobuf-compiler libprotobuf-dev
      #- name: Run tests
      #run: cross test --release --target ${{ matrix.target }} --verbose
      - name: Build release
        run: cargo build --release
